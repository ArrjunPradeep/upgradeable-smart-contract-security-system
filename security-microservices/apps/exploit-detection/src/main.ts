import { NestFactory } from '@nestjs/core';
import { ConfigService } from '@nestjs/config';
import { ExploitDetectionModule } from './exploit-detection.module';
import { ExploitDetectionService } from './exploit-detection.service'; // Import your service
import { WinstonModule } from 'nest-winston';
import { instance } from '@app/common/logging/winston.logger';

async function bootstrap() {
  const app = await NestFactory.create(ExploitDetectionModule, {
    logger: WinstonModule.createLogger({
      instance: instance,
    }),
  });

  const configService = app.get(ConfigService);

  // Fetch configuration for the HTTP server
  const host = configService.get<string>('EXPLOIT_DETECTION.HOST');
  const port = configService.get<number>('EXPLOIT_DETECTION.PORT');

  // Get the ExploitDetectionService instance
  const exploitDetectionService = app.get(ExploitDetectionService);

  // Start monitoring for exploits
  await exploitDetectionService.monitor();

  // Start the HTTP server (if needed)
  // await app.listen(port, host, () => {
  //   console.log(`EXPLOIT_DETECTION is running on http://${host}:${port}`);
  // });
}

bootstrap();