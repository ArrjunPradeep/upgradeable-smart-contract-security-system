import { Module } from '@nestjs/common';
import { ExploitDetectionService } from './exploit-detection.service';
import { CommonModule } from '@app/common/common.module';
import { MailerModule } from '@nestjs-modules/mailer';
import { ConfigModule, ConfigService } from '@nestjs/config';
import { MongooseModule } from '@nestjs/mongoose';
import { ExploitLog, ExploitLogSchema } from './expolit-detection.schema';

@Module({
  imports: [
    // Importing a common module that likely contains shared services, utilities, or configurations
    CommonModule,

    // Configuring Mongoose with a schema for storing exploit logs in MongoDB
    MongooseModule.forFeature([{ name: ExploitLog.name, schema: ExploitLogSchema }]),

    // Configuring MailerModule to enable sending emails
    MailerModule.forRootAsync({
      imports: [
        // Importing ConfigModule to use configuration variables
        ConfigModule,
      ],
      // Using a factory function to asynchronously create MailerModule options
      useFactory: async(configService: ConfigService) => ({
        transport: {
          // Configuring the email transport host (SMTP server)
          host: configService.get<string>('EMAIL.HOST'),
          // Configuring the email transport port
          port: configService.get<number>('EMAIL.PORT'),
          // Disabling secure connection (not using SSL/TLS)
          secure: false,
          auth: {
            // SMTP authentication: username for the email service
            user: configService.get<string>('EMAIL.USERNAME'),
            // SMTP authentication: password for the email service
            pass: configService.get<string>('EMAIL.PASSWORD')
          },
        }
      }),
      // Injecting ConfigService to access environment variables
      inject: [ConfigService]
    })
  ],
  controllers: [], // No controllers are defined as this module may primarily focus on background services
  providers: [ExploitDetectionService], // Registering the ExploitDetectionService to be used within this module
})
export class ExploitDetectionModule {}
